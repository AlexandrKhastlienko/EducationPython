# У каждой задачи на Stepik есть виджет с процентом верных решений и общим количеством решений. В последнее время у Stepik барахлит алгоритм,
# обновляющий этот виджет. Помогите Stepik и напишите программу, которая будет подсчитывать, сколько учеников решили задачу
# и сколько верных попыток составляет от общего числа попыток.
# На вход вашей программе подается число n – общее число попыток решить задачу. Далее на вход подаются n строк, каждая в следующем формате:
# <никнейм>: <результат проверяющей системы>
# где <результат проверяющей системы> может принимать только два значения: Correct (задача решена верно) или Wrong (задача решена неверно).
# Ваша программа должна посчитать и вывести, сколько учащихся решили верно задачу и сколько верных попыток из всех в следующих форматах:
#
# Верно решили <количество верно решивших учащихся> учащихся
# Из всех попыток <процент верных решений>% верных
#
# где <количество верно решивших учащихся> – количество уникальных учащихся, которые верно решили задачу.
# При этом если у задачи еще нет верных отправок решений, то программа должна вывести текст:
# Вы можете стать первым, кто решит эту задачу
# Процент верных решений ваша программа должна округлять до целого числа по математическим правилам (см. Примечание 1).
#
# Формат входных данных
# На вход программе подаются число n, а затем – n строк, представляющих собой решения учащихся.
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи
# Примечание 1. Округление процента решений должно осуществляться по математическим правилам:
# число округляем в меньшую сторону, если дробная часть менее 0.5, или в большую сторону в противном случае. Например:


def round_up(n):
    if n - int(n) == 0.5:
        return int(n) + 1
    else:
        return round(n)


def answer(n):
    ok = 0
    try_not_uniq = 0
    names = set()

    for _ in range(n):
        data = input()
        name = data[: data.index(":")].lower()
        answer = data[data.index(":") + 2 :].lower()
        if name not in names and answer == "correct":
            ok += 1
            names.add(name)
        if answer == "correct":
            try_not_uniq += 1

    return try_not_uniq, ok


def print_answer(n):
    a, b = answer(n)

    if n == 0 or b == 0:
        print("Вы можете стать первым, кто решит эту задачу")
    else:
        percent = (100 * a) / n
        print(
            f"Верно решили {b} учащихся",
            f"Из всех попыток {round_up(percent)}% верных",
            sep="\n",
        )


n = int(input())

print_answer(n)
